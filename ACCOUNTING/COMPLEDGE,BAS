1 REM *** COMPACT-LEDGER V1.1 ***
2 REM *** MBASIC-80 FOR CP/M PROGRAM WRITTEN FOR THE KAYPRO II/83 BY C. VAN DER KAAY (2024) ***
3 REM *** THIS IS A RECREATION INSPIRED BY THE ORIGINAL MINI-LEDGER ADVERTISEMENT ***
5 REM *** INSPIRED BY THE 1980S ACCOUNTING PROGRAM MINI-LEDGER BY PARADIGM CONSULTANTS ***
9 REM *** PROGRAM INITIALIZATION ***
10 DIM CODES$(99), CODEDESC$(99), CODE$(3000), AMOUNT(3000), DESC$(3000), DATE$(3000), TYPE$(3000)
11 DIM MONTHLYTOTAL(12), YEARTOTAL(366) ' ARRAYS TO STORE MONTHLY AND YEARLY TOTALS
12 DIM CODETOTALS$(99), CODEEXPENSES(99), CODEREVENUES(99) ' ARRAYS FOR REPORTING
13 DIM MONTHLYREVENUES(12), MONTHLYEXPENSES(12) ' ARRAYS TO SEPARATE REVENUES AND EXPENSES
14 FOR I = 1 TO 99
15 CODETOTALS$(I) = "" ' INITIALIZE STRING ARRAY ELEMENTS
16 NEXT I
17 DIMENSIONED = 0 ' FLAG TO CHECK IF ARRAYS HAVE BEEN DIMENSIONED
18 CODECOUNT = 0 ' COUNTER FOR NUMBER OF CODES
19 ENTRYCOUNT = 0 ' COUNTER FOR NUMBER OF LEDGER ENTRIES
20 REM ON ERROR GOTO 9500 ' ENABLE ERROR TRAPPING
21 GOSUB 500 ' LOAD PRESET CODES
22 GOSUB 10000 ' DISPLAY SPLASH SCREEN
23 GOSUB 9000 ' DISPLAY MENU
24 END
100 REM *** DATE ENTRY SUBROUTINE ***
110 PRINT "ENTER START DATE (YYYY-MM-DD): "
120 INPUT STARTDATE$
125 DATE$ = STARTDATE$: GOSUB 800
130 IF VALIDDATE = 0 THEN PRINT "INVALID DATE FORMAT. PLEASE USE YYYY-MM-DD.": GOTO 110
140 PRINT "ENTER END DATE (YYYY-MM-DD): "
150 INPUT ENDDATE$
155 DATE$ = ENDDATE$: GOSUB 800
160 IF VALIDDATE = 0 THEN PRINT "INVALID DATE FORMAT. PLEASE USE YYYY-MM-DD.": GOTO 140
170 RETURN
500 REM *** SUBROUTINE TO LOAD PRESET CODES ***
501 IF CODECOUNT <> 0 THEN RETURN ' PREVENT RELOADING IF CODES ALREADY EXIST
502 CODES$(1) = "R01": CODEDESC$(1) = "SALES REVENUE": CODECOUNT = 1
503 CODES$(2) = "R02": CODEDESC$(2) = "SERVICE REVENUE": CODECOUNT = CODECOUNT + 1
504 CODES$(3) = "R03": CODEDESC$(3) = "SUBSCRIPTION/RECURRING REVENUE": CODECOUNT = CODECOUNT + 1
505 CODES$(4) = "R04": CODEDESC$(4) = "RENTAL INCOME": CODECOUNT = CODECOUNT + 1
506 CODES$(5) = "R05": CODEDESC$(5) = "INTEREST INCOME": CODECOUNT = CODECOUNT + 1
507 CODES$(6) = "E01": CODEDESC$(6) = "RENT OR LEASE": CODECOUNT = CODECOUNT + 1
508 CODES$(7) = "E02": CODEDESC$(7) = "UTILITIES": CODECOUNT = CODECOUNT + 1
509 CODES$(8) = "E03": CODEDESC$(8) = "OFFICE SUPPLIES": CODECOUNT = CODECOUNT + 1
510 CODES$(9) = "E04": CODEDESC$(9) = "EQUIPMENT PURCHASES/LEASES": CODECOUNT = CODECOUNT + 1
511 CODES$(10) = "E05": CODEDESC$(10) = "REPAIRS AND MAINTENANCE": CODECOUNT = CODECOUNT + 1
512 CODES$(11) = "E06": CODEDESC$(11) = "MARKETING/ADVERTISING": CODECOUNT = CODECOUNT + 1
513 CODES$(12) = "E07": CODEDESC$(12) = "SOFTWARE SUBSCRIPTIONS/TOOLS": CODECOUNT = CODECOUNT + 1
514 CODES$(13) = "E08": CODEDESC$(13) = "PROFESSIONAL FEES (LEGAL/CONSULTING)": CODECOUNT = CODECOUNT + 1
515 CODES$(14) = "E09": CODEDESC$(14) = "PAYROLL EXPENSES": CODECOUNT = CODECOUNT + 1
516 CODES$(15) = "E10": CODEDESC$(15) = "EMPLOYEE BENEFITS": CODECOUNT = CODECOUNT + 1
517 CODES$(16) = "E11": CODEDESC$(16) = "CONTRACTOR PAYMENTS": CODECOUNT = CODECOUNT + 1
518 CODES$(17) = "E12": CODEDESC$(17) = "TRAVEL EXPENSES (FLIGHTS, HOTELS)": CODECOUNT = CODECOUNT + 1
519 CODES$(18) = "E13": CODEDESC$(18) = "VEHICLE EXPENSES (FUEL, MAINTENANCE)": CODECOUNT = CODECOUNT + 1
520 CODES$(19) = "E14": CODEDESC$(19) = "INSURANCE (BUSINESS, LIABILITY)": CODECOUNT = CODECOUNT + 1
521 CODES$(20) = "E15": CODEDESC$(20) = "TAXES AND LICENSES": CODECOUNT = CODECOUNT + 1
522 CODES$(21) = "E99": CODEDESC$(21) = "MISCELLANEOUS EXPENSE": CODECOUNT = CODECOUNT + 1
523 RETURN
800 REM *** DATE VALIDATION SUBROUTINE ***
801 VALIDDATE = 1 ' ASSUME DATE IS VALID
802 IF LEN(DATE$) <> 10 THEN VALIDDATE = 0: RETURN
803 IF MID$(DATE$, 5, 1) <> "-" OR MID$(DATE$, 8, 1) <> "-" THEN VALIDDATE = 0: RETURN
804 REM CHECK THAT YEAR, MONTH, AND DAY ARE NUMERIC
805 FOR I = 1 TO 4
806   IF MID$(DATE$, I, 1) < "0" OR MID$(DATE$, I, 1) > "9" THEN VALIDDATE = 0: RETURN
807 NEXT I
808 FOR I = 6 TO 7
809   IF MID$(DATE$, I, 1) < "0" OR MID$(DATE$, I, 1) > "9" THEN VALIDDATE = 0: RETURN
810 NEXT I
811 FOR I = 9 TO 10
812   IF MID$(DATE$, I, 1) < "0" OR MID$(DATE$, I, 1) > "9" THEN VALIDDATE = 0: RETURN
813 NEXT I
814 REM EXTRACT YEAR, MONTH, AND DAY
815 YY = VAL(LEFT$(DATE$, 4))    ' EXTRACT YEAR
816 MM = VAL(MID$(DATE$, 6, 2))  ' EXTRACT MONTH
817 DD = VAL(MID$(DATE$, 9, 2))  ' EXTRACT DAY
818 REM CHECK VALID RANGE FOR MONTH
819 IF MM < 1 OR MM > 12 THEN VALIDDATE = 0: RETURN
820 REM CHECK VALID RANGE FOR DAY
821 IF MM = 1 OR MM = 3 OR MM = 5 OR MM = 7 OR MM = 8 OR MM = 10 OR MM = 12 THEN GOTO 850
822 IF MM = 4 OR MM = 6 OR MM = 9 OR MM = 11 THEN GOTO 860
823 IF MM = 2 THEN GOTO 870
824 VALIDDATE = 0: RETURN ' INVALID MONTH (SHOULD NEVER REACH HERE)
850 REM CHECK DAYS FOR MONTHS WITH 31 DAYS
851 IF DD < 1 OR DD > 31 THEN VALIDDATE = 0: RETURN
852 RETURN
860 REM CHECK DAYS FOR MONTHS WITH 30 DAYS
861 IF DD < 1 OR DD > 30 THEN VALIDDATE = 0: RETURN
862 RETURN
870 REM CHECK DAYS FOR FEBRUARY
871 REM CHECK IF LEAP YEAR
872 IF (YY MOD 4 = 0 AND YY MOD 100 <> 0) OR (YY MOD 400 = 0) THEN GOTO 880
873 REM NON-LEAP YEAR
874 IF DD < 1 OR DD > 28 THEN VALIDDATE = 0: RETURN
875 RETURN
880 REM LEAP YEAR - FEBRUARY CAN HAVE UP TO 29 DAYS
881 IF DD < 1 OR DD > 29 THEN VALIDDATE = 0: RETURN
882 RETURN
1000 REM *** ADD A NEW CODE SUBROUTINE ***
1002 PRINT CHR$(26) ' CLEAR SCREEN
1005 PRINT "******************************"
1006 PRINT "        ADD A NEW CODE"
1007 PRINT "******************************"
1008 PRINT
1009 PRINT "ENTER CODE (E.G., E01 FOR EXPENSE, R01 FOR REVENUE, OR 'R' TO RETURN TO THE MAIN MENU):"
1010 INPUT CODE$
1015 IF CODE$ = "R" OR CODE$ = "R" THEN GOSUB 9000: RETURN
1020 IF LEN(CODE$) <> 3 OR (LEFT$(CODE$, 1) <> "E" AND LEFT$(CODE$, 1) <> "R") OR NOT (MID$(CODE$, 2, 2) >= "00" AND MID$(CODE$, 2, 2) <= "99") THEN GOTO 1023
1021 GOTO 1035
1023 PRINT "INVALID CODE FORMAT. PLEASE MAKE SURE YOUR CODE STARTS WITH 'E' FOR EXPENSE OR 'R' FOR REVENUE, AND IS FOLLOWED BY TWO DIGITS."
1024 PRINT "ENTER CODE (E.G., E01 FOR EXPENSE, R01 FOR REVENUE, OR 'R' TO RETURN TO THE MAIN MENU):"
1026 INPUT CODE$
1027 IF CODE$ = "R" OR CODE$ = "R" THEN GOSUB 9000: RETURN
1028 GOTO 1020
1035 PRINT "ENTER CODE DESCRIPTION: "
1040 INPUT DESC$
1041 IF DESC$ = "" THEN PRINT "ERROR: DESCRIPTION CANNOT BE BLANK. PLEASE RE-ENTER.": GOTO 1035
1050 FOR I = 1 TO CODECOUNT
1060 IF CODES$(I) = CODE$ THEN PRINT "ERROR: CODE ALREADY EXISTS.": GOTO 1160
1070 NEXT I
1080 IF CODECOUNT < 99 THEN GOTO 1090 ELSE GOTO 1140
1090 CODECOUNT = CODECOUNT + 1
1100 CODES$(CODECOUNT) = CODE$
1110 CODEDESC$(CODECOUNT) = DESC$
1120 PRINT "CODE ADDED SUCCESSFULLY."
1130 GOTO 1160
1140 PRINT "MAXIMUM OF 99 CODES REACHED."
1160 GOSUB 9000  ' RETURN TO MENU
1170 RETURN
1200 REM *** DISPLAY LIST OF CODES WITH PAGINATION ***
1205 PRINT CHR$(26) ' CLEAR SCREEN
1206 PRINT "*******************************"
1207 PRINT "      VIEW EXISTING CODES"
1208 PRINT "*******************************"
1210 IF CODECOUNT = 0 THEN PRINT "NO CODES DEFINED YET.": GOTO 1250
1215 PAGESTART = 1  ' INITIALIZE STARTING INDEX FOR PAGINATION
1220 PAGESIZE = 11  ' DEFINE THE NUMBER OF ENTRIES PER PAGE
1225 GOSUB 1270     ' CALL SUBROUTINE TO DISPLAY THE FIRST PAGE
1230 INPUT "PRESS 'N' NEXT, 'P' PREVIOUS, ANY OTHER KEY TO RETURN: ", CHOICE$
1235 IF CHOICE$ = "N" AND PAGESTART + PAGESIZE <= CODECOUNT THEN PAGESTART = PAGESTART + PAGESIZE: GOSUB 1270: GOTO 1230
1240 IF CHOICE$ = "P" AND PAGESTART - PAGESIZE >= 1 THEN PAGESTART = PAGESTART - PAGESIZE: GOSUB 1270: GOTO 1230
1245 GOTO 1250 ' EXIT TO MENU FOR ANY OTHER KEY
1250 GOSUB 9000  ' RETURN TO MAIN MENU
1260 RETURN
1270 REM *** SUBROUTINE TO DISPLAY A PAGE OF CODES ***
1275 PRINT CHR$(26) ' CLEAR SCREEN
1280 FOR I = PAGESTART TO PAGESTART + PAGESIZE - 1
1285 IF I > CODECOUNT THEN GOTO 1296 ' EXIT LOOP IF NO MORE CODES TO DISPLAY
1290 PRINT "CODE: "; CODES$(I); " | DESCRIPTION: "; CODEDESC$(I)
1295 NEXT I
1296 PRINT STRING$(40, "-") ' SEPARATOR LINE
1297 PRINT "PAGE "; INT(PAGESTART / PAGESIZE) + 1; " OF "; INT((CODECOUNT + PAGESIZE - 1) / PAGESIZE)
1298 PRINT
1299 RETURN
1300 REM *** DELETE A CODE ***
1301 PRINT CHR$(26) ' CLEAR SCREEN
1302 PRINT "*******************************"
1303 PRINT "         DELETE A CODE"
1304 PRINT "*******************************"
1305 PRINT
1306 PRINT "ENTER CODE TO DELETE: "
1310 INPUT CODE$
1320 FOUND = 0
1321 FOR I = 1 TO CODECOUNT
1330 IF CODES$(I) = CODE$ THEN FOUND = 1: GOTO 1350
1340 NEXT I
1350 IF FOUND = 0 THEN PRINT "CODE DOES NOT EXIST.": GOTO 1420
REM *** CHECK FOR ASSOCIATED LEDGER ENTRIES ***
1355 FOR J = 1 TO ENTRYCOUNT
1356 IF CODE$(J) = CODE$ THEN PRINT "ERROR: CODE IS IN USE IN THE LEDGER. DELETE ASSOCIATED LEDGER ENTRIES FIRST.": GOTO 1420
1357 NEXT J
1360 FOR K = I TO CODECOUNT - 1
1370 CODES$(K) = CODES$(K + 1)
1380 CODEDESC$(K) = CODEDESC$(K + 1)
1390 NEXT K
1400 CODECOUNT = CODECOUNT - 1
1410 PRINT "CODE DELETED SUCCESSFULLY."
1420 GOSUB 9000  ' RETURN TO MENU
1430 RETURN 
1500 REM *** ADD A NEW LEDGER ENTRY ***
1501 PRINT CHR$(26) ' CLEAR SCREEN
1502 PRINT "******************************"
1503 PRINT "    ADD A NEW LEDGER ENTRY"
1504 PRINT "******************************"
1505 PRINT
1506 PRINT "ENTER CODE: "
1510 INPUT CODE$
1520 FOR I = 1 TO CODECOUNT
1530 IF CODES$(I) = CODE$ THEN GOTO 1560 ' VALID CODE
1540 NEXT I
1550 REM *** INVALID CODE HANDLING ***
1551 PRINT "INVALID CODE: FORMAT IS INCORRECT OR CODE DOES NOT EXIST."
1552 PRINT "DO YOU WANT TO VIEW VALID CODES (Y/N)? ";
1553 INPUT VALID$
1554 IF VALID$ = "Y" THEN GOSUB 1200 ' DISPLAY CODES WITH PAGINATION
1555 GOTO 1506 ' RESTART CODE INPUT AFTER DISPLAYING CODES
1560 REM *** CONTINUE TO LEDGER ENTRY ***
1575 ENTRYCOUNT = ENTRYCOUNT + 1 ' LINE NUMBER ADDED
1576 CODE$(ENTRYCOUNT) = CODE$
1580 PRINT "ENTER AMOUNT: "
1590 INPUT AMOUNT(ENTRYCOUNT)
1592 IF AMOUNT(ENTRYCOUNT) < 0 THEN PRINT "ERROR: INVALID AMOUNT. PLEASE ENTER A POSITIVE VALUE.": GOTO 1580
1600 REM *** GET ENTRY DESCRIPTION ***
1610 PRINT "ENTER ENTRY DESCRIPTION (MAX 20 CHARACTERS): "
1620 INPUT DESC$(ENTRYCOUNT)
1625 IF DESC$(ENTRYCOUNT) = "" THEN PRINT "ERROR: DESCRIPTION CANNOT BE BLANK. PLEASE RE-ENTER.": GOTO 1610
1626 IF LEN(DESC$(ENTRYCOUNT)) > 20 THEN PRINT "ERROR: DESCRIPTION TOO LONG. PLEASE LIMIT TO 20 CHARACTERS.": GOTO 1610
1630 PRINT "ENTER DATE (YYYY-MM-DD): "
1640 INPUT DATE$(ENTRYCOUNT)
1645 DATE$ = DATE$(ENTRYCOUNT): GOSUB 800 ' VALIDATE DATE
1650 IF VALIDDATE = 0 THEN PRINT "ERROR: INVALID DATE FORMAT. PLEASE USE YYYY-MM-DD.": GOTO 1630
1660 IF LEFT$(CODE$(ENTRYCOUNT), 1) = "E" THEN TYPE$(ENTRYCOUNT) = "EXPENSE" ELSE TYPE$(ENTRYCOUNT) = "REVENUE"
1670 PRINT "ENTRY ADDED SUCCESSFULLY."
1680 REM *** PROMPT USER FOR NEXT ACTION ***
1681 PRINT "WHAT WOULD YOU LIKE TO DO NEXT?"
1682 PRINT "1 - ADD ANOTHER ENTRY"
1683 PRINT "2 - VIEW LAST ENTRY"
1684 PRINT "3 - RETURN TO MAIN MENU"
1685 PRINT "ENTER YOUR CHOICE (1-3): ";
1686 INPUT CHOICE$
1687 IF CHOICE$ = "1" THEN GOTO 1500
1688 IF CHOICE$ = "2" THEN GOTO 1692
1689 IF CHOICE$ = "3" THEN GOSUB 9000: RETURN
1690 PRINT "INVALID CHOICE. PLEASE ENTER 1, 2, OR 3.": GOTO 1685
1691 REM *** VIEW LAST ENTRY INLINE ***
1692 PRINT "LAST ENTRY DETAILS:"
1693 PRINT "CODE: "; CODE$(ENTRYCOUNT)
1694 PRINT "AMOUNT: "; AMOUNT(ENTRYCOUNT)
1695 PRINT "DESCRIPTION: "; DESC$(ENTRYCOUNT)
1696 PRINT "DATE: "; DATE$(ENTRYCOUNT)
1697 PRINT "TYPE: "; TYPE$(ENTRYCOUNT)
1698 GOTO 1680
1699 RETURN
1700 REM *** DELETE A LEDGER ENTRY ***
1701 PRINT CHR$(26) ' CLEAR SCREEN
1702 PRINT "*******************************"
1703 PRINT "     DELETE A LEDGER ENTRY"
1704 PRINT "*******************************"
1705 PRINT:PRINT "ENTER INDEX OF ENTRY TO DELETE: "
1710 INPUT INDEX
1720 IF INDEX < 1 OR INDEX > ENTRYCOUNT THEN PRINT "ENTRY DOES NOT EXIST.": GOTO 1820
1730 FOR I = INDEX TO ENTRYCOUNT - 1
1740 CODE$(I) = CODE$(I + 1)
1750 AMOUNT(I) = AMOUNT(I + 1)
1760 DESC$(I) = DESC$(I + 1)
1770 DATE$(I) = DATE$(I + 1)
1780 TYPE$(I) = TYPE$(I + 1)
1790 NEXT I
1800 ENTRYCOUNT = ENTRYCOUNT - 1
1810 PRINT "ENTRY DELETED SUCCESSFULLY."
1820 GOSUB 9000  ' RETURN TO MENU
1830 RETURN
1900 REM *** VIEW LEDGER ENTRIES ***
1901 PRINT CHR$(26) ' CLEAR SCREEN
1902 PRINT "*****************************"
1903 PRINT "     VIEW LEDGER ENTRIES"
1904 PRINT "*****************************"
1905 PRINT
1906 IF ENTRYCOUNT = 0 THEN PRINT "LEDGER IS EMPTY. RETURNING TO MAIN MENU.": GOTO 1930
1910 GOSUB 100
1920 PRINT "LEDGER ENTRIES WITHIN DATE RANGE:"
1921 PAGESTART = 1  ' INITIALIZE PAGE START
1922 PAGESIZE = 20  ' DEFINE PAGE SIZE
1923 GOSUB 1950  ' GO TO SUBROUTINE TO DISPLAY THE FIRST PAGE
1924 INPUT "PRESS 'N' FOR NEXT PAGE, 'P' FOR PREVIOUS PAGE, OR ANY OTHER KEY TO RETURN TO MENU: ", CHOICE$
1925 IF CHOICE$ = "N" AND PAGESTART + PAGESIZE <= ENTRYCOUNT THEN PAGESTART = PAGESTART + PAGESIZE: GOTO 1923
1926 IF CHOICE$ = "N" AND PAGESTART + PAGESIZE > ENTRYCOUNT THEN PAGESTART = ENTRYCOUNT - PAGESIZE + 1: IF PAGESTART < 1 THEN PAGESTART = 1: GOTO 1923
1927 IF CHOICE$ = "P" AND PAGESTART - PAGESIZE >= 1 THEN PAGESTART = PAGESTART - PAGESIZE: GOTO 1923
1928 IF CHOICE$ = "P" AND PAGESTART - PAGESIZE < 1 THEN PAGESTART = 1: GOTO 1923
1930 GOSUB 9000  ' RETURN TO MENU
1940 RETURN
1950 REM *** DISPLAY LEDGER ENTRIES WITH PAGING ***
1951 PRINT CHR$(26) ' CLEAR SCREEN
1956 FOR I = PAGESTART TO PAGESTART + PAGESIZE - 1
1957 IF I > ENTRYCOUNT THEN GOTO 1961
1958 IF DATE$(I) >= STARTDATE$ AND DATE$(I) <= ENDDATE$ THEN PRINT "INDEX: "; I; " | CODE: "; CODE$(I); " | AMOUNT: "; AMOUNT(I); " | DESC.: "; DESC$(I); " | DATE: "; DATE$(I); " | TYPE: "; TYPE$(I)
1960 NEXT I
1961 RETURN
2000 REM *** SAVE DATA TO FILE ***
2001 PRINT "*******************************"
2002 PRINT "       SAVE DATA TO FILE"
2003 PRINT "*******************************"
2004 ON ERROR GOTO 9500 ' ENABLE ERROR TRAPPING
2005 PRINT "ENTER FILENAME TO SAVE TO: "
2010 INPUT FILENAME$
2020 OPEN "O", #1, FILENAME$ ' OPEN FILE FOR OUTPUT
2030 PRINT #1, CODECOUNT
2040 FOR I = 1 TO CODECOUNT
2050 PRINT #1, CODES$(I), CODEDESC$(I)
2060 NEXT I
2070 PRINT #1, ENTRYCOUNT
2080 FOR I = 1 TO ENTRYCOUNT
2090 PRINT #1, CODE$(I), AMOUNT(I), DESC$(I), DATE$(I), TYPE$(I)
2100 NEXT I
2110 CLOSE #1
2120 PRINT "GOOD NEWS! YOUR DATA SAVED SUCCESSFULLY."
2130 GOSUB 9000  ' RETURN TO MENU
2140 RETURN
2200 REM *** LOAD DATA FROM FILE ***
2201 PRINT CHR$(26) ' CLEAR SCREEN
2202 PRINT "*******************************"
2203 PRINT "      LOAD DATA FROM FILE"
2204 PRINT "*******************************"
2205 PRINT
2206 GOSUB 4000 ' CLEAR ALL ARRAYS AND RESET COUNTERS TO AVOID MIXING OLD AND NEW DATA
2207 PRINT "ENTER FILENAME TO LOAD FROM: "
2210 INPUT FILENAME$
2220 OPEN "I", #1, FILENAME$
2230 INPUT #1, CODECOUNT
2240 FOR I = 1 TO CODECOUNT
2250 INPUT #1, CODES$(I), CODEDESC$(I)
2260 NEXT I
2270 INPUT #1, ENTRYCOUNT
2280 FOR I = 1 TO ENTRYCOUNT
2290 INPUT #1, INDEX, CODE$(I), AMOUNT(I), DESC$(I), DATE$(I), TYPE$(I) ' LOAD INDEX FROM SAVED DATA
2300 NEXT I
2310 CLOSE #1
2320 PRINT "GOOD NEWS! YOUR DATA LOADED SUCCESSFULLY."
2330 GOSUB 9000  ' RETURN TO MENU
2340 RETURN
2500 REM *** DETAILED REPORT MENU ***
2501 PRINT CHR$(26) ' CLEAR SCREEN
2502 PRINT "******************************"
2503 PRINT "       DETAILED REPORT"
2504 PRINT "******************************"
2505 PRINT
2510 PRINT "CHOOSE REPORT TYPE:"
2511 PRINT "1. DATE RANGE REPORT"
2512 PRINT "2. MONTHLY TOTALS BY YEAR"
2513 INPUT "ENTER CHOICE (1 OR 2): ", REPORTCHOICE
2514 IF REPORTCHOICE = 1 THEN GOTO 2520
2515 IF REPORTCHOICE = 2 THEN GOTO 2600
2516 PRINT "ERROR: INVALID CHOICE. PLEASE ENTER 1 OR 2.": GOTO 2510
2520 REM *** DATE RANGE REPORT ***
2521 GOSUB 100 ' DATE ENTRY SUBROUTINE TO GET START AND END DATES
2522 IF ENTRYCOUNT = 0 THEN PRINT "LEDGER IS EMPTY. RETURNING TO MENU.": GOSUB 9000: RETURN
2525 REM INITIALIZE VARIABLES
2526 TOTALEXPENSE = 0
2527 TOTALREVENUE = 0
2528 GOSUB 4250 ' CALL ARRAY INITIALIZATION SUBROUTINE
2530 FOR I = 1 TO CODECOUNT
2535 CODETOTALS$(I) = CODES$(I)
2536 CODEEXPENSES(I) = 0
2537 CODEREVENUES(I) = 0
2540 NEXT I
2545 REM FILTER AND DISPLAY ENTRIES WITH PAGINATION
2550 PAGESTART = 1         ' INITIALIZE PAGE START
2551 PAGESIZE = 10         ' DEFINE PAGE SIZE (NUMBER OF ENTRIES PER PAGE)
2552 TOTALPAGES = (ENTRYCOUNT + PAGESIZE - 1) \ PAGESIZE ' CALCULATE TOTAL PAGES
2553 GOSUB 2570            ' DISPLAY THE FIRST PAGE OF RESULTS
2554 REM PAGINATION NAVIGATION
2555 INPUT "PRESS 'N' FOR NEXT PAGE, 'P' FOR PREVIOUS PAGE, OR ANY OTHER KEY TO RETURN: ", CHOICE$
2556 IF CHOICE$ = "N" THEN IF PAGESTART + PAGESIZE <= ENTRYCOUNT THEN PAGESTART = PAGESTART + PAGESIZE: GOSUB 2570: GOTO 2555
2557 IF CHOICE$ = "P" THEN IF PAGESTART - PAGESIZE >= 1 THEN PAGESTART = PAGESTART - PAGESIZE: GOSUB 2570: GOTO 2555
2558 REM *** PROMPT USER FOR NEXT ACTION ***
2559 PRINT "REPORT COMPLETE."
2560 PRINT "CHOOSE NEXT ACTION:"
2561 PRINT "1. RERUN DATE RANGE REPORT"
2562 PRINT "2. RETURN TO DETAILED REPORT MENU"
2563 PRINT "3. RETURN TO MAIN MENU"
2564 INPUT "ENTER CHOICE (1, 2, OR 3): ", NEXTACTION
2565 IF NEXTACTION = 1 THEN GOTO 2520 ' RERUN DATE RANGE REPORT
2566 IF NEXTACTION = 2 THEN GOTO 2500 ' RETURN TO DETAILED REPORT MENU
2567 IF NEXTACTION = 3 THEN GOSUB 9000: RETURN ' RETURN TO MAIN MENU
2568 PRINT "ERROR: INVALID CHOICE. PLEASE ENTER 1, 2, OR 3.": GOTO 2564
2570 REM *** DISPLAY A PAGE OF DATE RANGE REPORT ***
2571 PRINT CHR$(26) ' CLEAR SCREEN
2575 PRINT "DATE RANGE: "; STARTDATE$; " TO "; ENDDATE$
2576 PRINT "PAGE "; INT((PAGESTART - 1) / PAGESIZE) + 1; " OF "; TOTALPAGES
2577 PRINT STRING$(79, "-")
2578 PRINT "INDEX | CODE  |   AMOUNT   | DESCRIPTION          | DATE       | TYPE     "
2579 PRINT STRING$(79, "-")
2580 FOR I = PAGESTART TO PAGESTART + PAGESIZE - 1
2581 IF I > ENTRYCOUNT THEN GOTO 2597 ' END OF ENTRIES
2582 IF DATE$(I) >= STARTDATE$ THEN IF DATE$(I) <= ENDDATE$ THEN GOTO 2583 ELSE GOTO 2596 ELSE GOTO 2596
2583 PRINT RIGHT$("     " + STR$(I), 5); " | "; 
2584 PRINT LEFT$(CODE$(I) + SPACE$(5), 5); " | "; 
2585 PRINT RIGHT$(SPACE$(10) + STR$(AMOUNT(I)), 10); " | "; 
2586 PRINT LEFT$(DESC$(I) + SPACE$(20), 20); " | "; 
2587 PRINT LEFT$(DATE$(I) + SPACE$(10), 10); " | "; 
2588 PRINT LEFT$(TYPE$(I) + SPACE$(9), 9)
2589 IF TYPE$(I) = "EXPENSE" THEN GOTO 2590 ELSE GOTO 2595
2590 TOTALEXPENSE = TOTALEXPENSE + AMOUNT(I)
2591 FOR J = 1 TO CODECOUNT
2592 IF CODE$(I) = CODETOTALS$(J) THEN CODEEXPENSES(J) = CODEEXPENSES(J) + AMOUNT(I): GOTO 2594
2593 NEXT J
2594 GOTO 2596
2595 TOTALREVENUE = TOTALREVENUE + AMOUNT(I)
2596 NEXT I
2597 PRINT STRING$(79, "-")
2598 PRINT "PAGE "; INT((PAGESTART - 1) / PAGESIZE) + 1; " OF "; TOTALPAGES
2599 RETURN
2600 REM *** MONTHLY TOTALS BY YEAR ***
2601 PRINT CHR$(26) ' CLEAR SCREEN
2602 PRINT "******************************"
2603 PRINT "    MONTHLY TOTALS BY YEAR"
2604 PRINT "******************************"
2605 PRINT
2610 INPUT "ENTER YEAR (YYYY): ", YEAR$
2611 IF LEN(YEAR$) <> 4 OR VAL(YEAR$) < 1900 OR VAL(YEAR$) > 2100 THEN PRINT "ERROR: INVALID YEAR. PLEASE ENTER A VALID YEAR.": GOTO 2610
2615 REM RESET MONTHLY TOTALS
2620 FOR M = 1 TO 12
2625 MONTHLYREVENUES(M) = 0 ' RESET REVENUE TOTALS
2626 MONTHLYEXPENSES(M) = 0 ' RESET EXPENSE TOTALS
2627 NEXT M
2630 TOTALREVENUE = 0 ' INITIALIZE TOTAL REVENUE
2631 TOTALEXPENSE = 0 ' INITIALIZE TOTAL EXPENSE
2635 REM LOOP THROUGH ENTRIES TO CALCULATE MONTHLY TOTALS
2640 FOR I = 1 TO ENTRYCOUNT
2645 IF LEFT$(DATE$(I), 4) = YEAR$ THEN GOTO 2650 ' CHECK IF THE YEAR MATCHES
2650 MN = VAL(MID$(DATE$(I), 6, 2)) ' EXTRACT THE MONTH FROM THE DATE
2655 IF LEFT$(CODE$(I), 1) = "R" THEN MONTHLYREVENUES(MN) = MONTHLYREVENUES(MN) + AMOUNT(I): GOTO 2660
2660 IF LEFT$(CODE$(I), 1) = "E" THEN MONTHLYEXPENSES(MN) = MONTHLYEXPENSES(MN) + AMOUNT(I): GOTO 2670
2670 NEXT I
2680 REM DISPLAY MONTHLY TOTALS
2685 PRINT STRING$(79, "-")
2686 PRINT "MONTHLY TOTALS FOR YEAR "; YEAR$
2687 PRINT "MONTH      "; "REVENUE       "; "EXPENSE       "; "NET TOTAL"
2688 PRINT STRING$(79, "-")
2689 RESTORE ' RESET THE DATA POINTER TO THE BEGINNING OF THE DATA BLOCK
2690 FOR M = 1 TO 12
2700 READ MONTHNAME$
2705 NETTOTAL = MONTHLYREVENUES(M) - MONTHLYEXPENSES(M)
2710 PRINT LEFT$(MONTHNAME$ + SPACE$(10), 10); TAB(12); 
2715 PRINT RIGHT$(SPACE$(10) + STR$(MONTHLYREVENUES(M)), 10); TAB(26);
2720 PRINT RIGHT$(SPACE$(10) + STR$(MONTHLYEXPENSES(M)), 10); TAB(40);
2725 PRINT RIGHT$(SPACE$(10) + STR$(NETTOTAL), 10)
2730 TOTALREVENUE = TOTALREVENUE + MONTHLYREVENUES(M)
2731 TOTALEXPENSE = TOTALEXPENSE + MONTHLYEXPENSES(M)
2735 NEXT M
2740 PRINT STRING$(79, "-")
2745 PRINT "TOTAL REVENUE: "; SPACE$(4); RIGHT$(SPACE$(10) + STR$(TOTALREVENUE), 10)
2750 PRINT "TOTAL EXPENSE: "; SPACE$(4); RIGHT$(SPACE$(10) + STR$(TOTALEXPENSE), 10)
2755 PRINT "NET TOTAL:     "; SPACE$(4); RIGHT$(SPACE$(10) + STR$(TOTALREVENUE - TOTALEXPENSE), 10)
2760 PRINT STRING$(79, "-")
2765 PRINT "PRESS ENTER TO RETURN TO MENU..."
2770 INPUT ""; DUMMY$
2780 GOSUB 9000 ' RETURN TO MENU
2790 RETURN
2963 REM *** REPORT BY CODE WITH YEARLY TOTALS ***
2965 PRINT CHR$(26) ' CLEAR SCREEN
2966 PRINT "*******************************"
2967 PRINT "        REPORT BY CODE"
2968 PRINT "*******************************"
2969 PRINT
2970 PRINT "ENTER YEAR (YYYY): "
2972 INPUT YEAR$
2974 IF LEN(YEAR$) <> 4 OR VAL(YEAR$) < 1900 OR VAL(YEAR$) > 2100 THEN PRINT "INVALID YEAR. PLEASE ENTER A VALID YEAR.": GOTO 2970
2976 PRINT: PRINT "ENTER CODE TO GENERATE REPORT FOR: "
2978 INPUT REPORTCODE$
2980 REM *** CHECK IF CODE EXISTS ***
2982 FOUND = 0
2984 FOR I = 1 TO CODECOUNT
2986 IF CODES$(I) = REPORTCODE$ THEN FOUND = 1: GOTO 2988
2988 NEXT I
2990 IF FOUND = 0 THEN PRINT "CODE NOT FOUND. PLEASE ENTER A VALID CODE.": GOTO 2978
2992 REM *** RESET MONTHLY TOTALS ***
2994 FOR M = 1 TO 12: MONTHLYTOTAL(M) = 0: NEXT M
2996 TOTALAMOUNT = 0
2998 REM *** LOOP THROUGH ENTRIES TO ACCUMULATE TOTALS ***
3000 FOR I = 1 TO ENTRYCOUNT
3002 IF CODE$(I) = REPORTCODE$ THEN GOTO 3004
3003 GOTO 3010 ' SKIP TO NEXT ENTRY IF CODE DOES NOT MATCH
3004 IF LEFT$(DATE$(I), 4) = YEAR$ THEN GOTO 3006
3005 GOTO 3010 ' SKIP TO NEXT ENTRY IF YEAR DOES NOT MATCH
3006 MN = VAL(MID$(DATE$(I), 6, 2)) ' EXTRACT MONTH FROM DATE
3008 MONTHLYTOTAL(MN) = MONTHLYTOTAL(MN) + AMOUNT(I)
3010 NEXT I
3012 REM *** DISPLAY RESULTS ***
3014 PRINT STRING$(79, "-")
3016 PRINT "MONTHLY TOTALS FOR CODE "; REPORTCODE$; " IN "; YEAR$
3017 PRINT STRING$(79, "-")
3018 PRINT "MONTH          AMOUNT      |  MONTH          AMOUNT"
3020 PRINT STRING$(79, "-")
3021 RESTORE ' RESET THE DATA POINTER TO THE BEGINNING OF THE DATA BLOCK
3022 FOR M = 1 TO 6
3024 READ MONTHNAME1$: READ MONTHNAME2$
3026 PRINT MONTHNAME1$; ": "; SPACE$(15 - LEN(MONTHNAME1$)); STR$(MONTHLYTOTAL(M)); SPACE$(6); "   | ";
3028 PRINT MONTHNAME2$; ": "; SPACE$(15 - LEN(MONTHNAME2$)); STR$(MONTHLYTOTAL(M + 6))
3030 TOTALAMOUNT = TOTALAMOUNT + MONTHLYTOTAL(M) + MONTHLYTOTAL(M + 6)
3032 NEXT M
3034 PRINT STRING$(79, "-")
3036 PRINT "YEARLY TOTAL FOR CODE "; REPORTCODE$; ": "; TOTALAMOUNT
3038 PRINT STRING$(79, "-")
3040 PRINT "WOULD YOU LIKE TO:"
3042 PRINT "1. GENERATE A NEW REPORT"
3044 PRINT "2. RETURN TO MAIN MENU"
3046 INPUT "ENTER YOUR CHOICE (1 OR 2): ", CHOICE
3048 IF CHOICE = 1 THEN GOTO 2965
3050 IF CHOICE = 2 THEN GOSUB 9000
3052 PRINT "ERROR: INVALID CHOICE. PLEASE SELECT 1 OR 2."
3054 GOTO 3046
3056 RETURN
3105 REM *** REPORT BY CATEGORY WITH YEARLY TOTALS ***
3106 PRINT CHR$(26) ' CLEAR SCREEN
3107 PRINT "*******************************"
3108 PRINT "      REPORT BY CATEGORY"
3109 PRINT "*******************************"
3110 PRINT
3111 PRINT "ENTER YEAR (YYYY): "
3112 INPUT YEAR$
3113 IF LEN(YEAR$) <> 4 OR VAL(YEAR$) < 1900 OR VAL(YEAR$) > 2100 THEN PRINT "INVALID YEAR. PLEASE ENTER A VALID YEAR.": GOTO 3111
3115 PRINT: PRINT "ENTER CATEGORY (E.G., E FOR EXPENSE, R FOR REVENUE): "
3116 INPUT CATEGORY$
3117 IF CATEGORY$ <> "E" AND CATEGORY$ <> "R" THEN PRINT "INVALID CATEGORY. PLEASE ENTER 'E' FOR EXPENSE OR 'R' FOR REVENUE.": GOTO 3115
3120 REM *** RESET EXISTING ARRAY VALUES TO 0 ***
3121 FOR I = 1 TO 12: MONTHLYTOTAL(I) = 0: NEXT I
3122 TOTALAMOUNT = 0
3130 REM *** LOOP THROUGH ENTRIES TO CALCULATE TOTALS ***
3135 FOR I = 1 TO ENTRYCOUNT
3136 IF LEFT$(CODE$(I), 1) <> CATEGORY$ THEN GOTO 3145
3137 IF LEFT$(DATE$(I), 4) <> YEAR$ THEN GOTO 3145
3138 MN = VAL(MID$(DATE$(I), 6, 2)) ' EXTRACT MONTH
3139 MONTHLYTOTAL(MN) = MONTHLYTOTAL(MN) + AMOUNT(I)
3145 NEXT I
3150 REM *** DISPLAY RESULTS ***
3151 PRINT STRING$(79, "-")
3152 IF CATEGORY$ = "E" THEN PRINT "MONTHLY EXPENSES FOR "; YEAR$ ELSE PRINT "MONTHLY REVENUE FOR "; YEAR$
3153 PRINT STRING$(79, "-")
3154 PRINT "MONTH          AMOUNT      |  MONTH          AMOUNT"
3155 PRINT STRING$(79, "-")
3156 RESTORE ' RESET DATA POINTER FOR MONTH NAMES
3157 FOR M = 1 TO 6
3158 READ MONTHNAME1$: READ MONTHNAME2$
3159 PRINT MONTHNAME1$; ": "; SPACE$(15 - LEN(MONTHNAME1$)); STR$(MONTHLYTOTAL(M)); SPACE$(6); "   | ";
3160 PRINT MONTHNAME2$; ": "; SPACE$(15 - LEN(MONTHNAME2$)); STR$(MONTHLYTOTAL(M + 6))
3161 TOTALAMOUNT = TOTALAMOUNT + MONTHLYTOTAL(M) + MONTHLYTOTAL(M + 6)
3162 NEXT M
3163 PRINT STRING$(79, "-")
3164 PRINT "YEARLY TOTAL: "; TOTALAMOUNT
3165 PRINT STRING$(79, "-")
3166 REM *** MENU OPTIONS TO RUN ANOTHER REPORT OR RETURN TO MAIN MENU ***
3167 PRINT "WOULD YOU LIKE TO:"
3168 PRINT "1. GENERATE A NEW REPORT"
3169 PRINT "2. RETURN TO MAIN MENU"
3170 INPUT "ENTER YOUR CHOICE (1 OR 2): ", CHOICE
3171 IF CHOICE = 1 THEN GOTO 3106
3172 IF CHOICE = 2 THEN GOSUB 9000
3173 PRINT "ERROR: INVALID CHOICE. PLEASE SELECT 1 OR 2."
3174 GOTO 3170
3175 RETURN
3500 REM *** DATA FOR MONTH NAMES ***
3510 DATA "JANUARY", "FEBRUARY", "MARCH", "APRIL", "MAY", "JUNE", "JULY", "AUGUST", "SEPTEMBER", "OCTOBER", "NOVEMBER", "DECEMBER"
4000 REM *** CLEAR ROUTINE SUBROUTINE ***
4005 PRINT CHR$(26) ' CLEAR SCREEN
4010 FOR I = 1 TO 99
4020 CODES$(I) = ""
4030 CODEDESC$(I) = ""
4040 NEXT I
4050 FOR I = 1 TO 1000
4060 CODE$(I) = ""
4070 AMOUNT(I) = 0
4080 DESC$(I) = ""
4090 DATE$(I) = ""
4100 TYPE$(I) = ""
4110 NEXT I
4120 CODECOUNT = 0
4130 ENTRYCOUNT = 0
4140 RETURN
4250 REM *** INITIALIZE ARRAYS FOR REPORTING ***
4260 IF CODETOTALS$(1) <> "" THEN GOTO 4330 ' SKIP INITIALIZATION IF ALREADY DONE
4270 FOR I = 1 TO 99
4280 CODETOTALS$(I) = "" ' INITIALIZE STRING ARRAY ELEMENTS
4290 CODEEXPENSES(I) = 0 ' RESET EXPENSE TOTALS
4300 CODEREVENUES(I) = 0 ' RESET REVENUE TOTALS
4310 NEXT I
4320 GOTO 4330 ' END OF INITIALIZATION BLOCK
4330 RETURN
5000 REM *** SUBROUTINE TO OUTPUT LEDGER TO PRINTER ***
5001 PRINT CHR$(26) ' CLEAR SCREEN
5002 PRINT "*****************************"
5003 PRINT "     PRINT LEDGER REPORT"
5004 PRINT "*****************************"
5005 GOSUB 100 ' PROMPT FOR DATE RANGE
5060 LPRINT "******************************************"
5070 LPRINT "              LEDGER REPORT"
5080 LPRINT "******************************************"
5090 LPRINT "DATE RANGE: "; STARTDATE$; " TO "; ENDDATE$
5100 LPRINT STRING$(79, "*")
5110 LPRINT "INDEX | CODE | AMOUNT | DESCRIPTION      | DATE       | TYPE"
5120 LPRINT STRING$(79, "*")
5130 TOTALEXPENSE = 0
5140 TOTALREVENUE = 0
5150 GOSUB 4250 ' CALL ARRAY INITIALIZATION SUBROUTINE
5170 FOR I = 1 TO CODECOUNT
5180 CODETOTALS$(I) = CODES$(I)
5190 CODEEXPENSES(I) = 0
5200 CODEREVENUES(I) = 0
5210 NEXT I
5220 FOR I = 1 TO ENTRYCOUNT
5230 IF DATE$(I) >= STARTDATE$ AND DATE$(I) <= ENDDATE$ THEN GOTO 5240 ELSE GOTO 5360
5240 ENTRY$ = RIGHT$("     " + STR$(I), 5) + " | " + LEFT$(CODE$(I) + "     ", 5) + " | " + RIGHT$("         " + STR$(AMOUNT(I)), 9) + " | " + LEFT$(DESC$(I) + "                    ", 20) + " | " + DATE$(I) + " | " + LEFT$(TYPE$(I) + "         ", 9)
5250 LPRINT ENTRY$ ' PRINT TO SCREEN
5260 IF TYPE$(I) = "EXPENSE" THEN GOTO 5270 ELSE GOTO 5320
5270 TOTALEXPENSE = TOTALEXPENSE + AMOUNT(I)
5280 FOR J = 1 TO CODECOUNT
5290 IF CODE$(I) = CODETOTALS$(J) THEN GOTO 5300
5300 CODEEXPENSES(J) = CODEEXPENSES(J) + AMOUNT(I)
5320 NEXT J
5330 TOTALREVENUE = TOTALREVENUE + AMOUNT(I)
5340 FOR J = 1 TO CODECOUNT
5350 IF CODE$(I) = CODETOTALS$(J) THEN GOTO 5360
5360 CODEREVENUES(J) = CODEREVENUES(J) + AMOUNT(I)
5370 NEXT J
5380 NEXT I
5390 LPRINT STRING$(79, "*")
5400 LPRINT "TOTAL EXPENSE FOR DATE RANGE: "; TOTALEXPENSE
5410 LPRINT "TOTAL REVENUE FOR DATE RANGE: "; TOTALREVENUE
5420 LPRINT "NET TOTAL FOR DATE RANGE: "; TOTALREVENUE - TOTALEXPENSE
5430 LPRINT STRING$(79, "*")
5440 PRINT "PRESS ENTER TO RETURN TO MAIN MENU..."
5450 INPUT ""; DUMMY$
5460 GOSUB 9000 ' RETURN TO MAIN MENU
5470 RETURN
6000 REM *** INSTRUCTIONS SUBROUTINE WITH PAGINATION ***
6010 PAGE = 1         ' START WITH PAGE 1
6020 CHOICE$ = ""     ' INITIALIZE CHOICE$ TO AVOID UNASSIGNED ERROR
6030 REM MAIN PAGINATION LOOP
6040 GOSUB 6150       ' DISPLAY THE CURRENT PAGE CONTENT
6060 PRINT "PRESS 'N' FOR NEXT PAGE, 'P' FOR PREVIOUS PAGE, OR 'M' TO RETURN TO MAIN MENU."
6070 PRINT "YOUR CHOICE: ";
6080 INPUT CHOICE$    ' GET USER INPUT
6090 IF CHOICE$ = "N" THEN PAGE = PAGE + 1   ' GO TO NEXT PAGE
6100 IF CHOICE$ = "P" THEN PAGE = PAGE - 1   ' GO TO PREVIOUS PAGE
6110 IF CHOICE$ = "M" THEN GOSUB 9000        ' RETURN TO MAIN MENU
6120 IF PAGE < 1 THEN PAGE = 1               ' ENSURE PAGE IS WITHIN VALID RANGE
6130 IF PAGE > 10 THEN PAGE = 9             ' ASSUME MAXIMUM OF 9 PAGES
6140 GOTO 6040                               ' LOOP BACK TO DISPLAY THE PAGE
6150 REM *** DISPLAY PAGE CONTENT BASED ON PAGE NUMBER ***
6200 IF PAGE = 1 THEN GOSUB 6305             ' DISPLAY PAGE 1
6220 IF PAGE = 2 THEN GOSUB 6580             ' DISPLAY PAGE 2
6230 IF PAGE = 3 THEN GOSUB 6791             ' DISPLAY PAGE 3
6240 IF PAGE = 4 THEN GOSUB 6950             ' DISPLAY PAGE 4
6250 IF PAGE = 5 THEN GOSUB 6969             ' DISPLAY PAGE 5
6260 IF PAGE = 6 THEN GOSUB 7000             ' DISPLAY PAGE 6
6270 IF PAGE = 7 THEN GOSUB 7161             ' DISPLAY PAGE 7
6280 IF PAGE = 8 THEN GOSUB 7388             ' DISPLAY PAGE 8
6290 IF PAGE = 9 THEN GOSUB 7498             ' DISPLAY PAGE 9
6300 RETURN
6305 REM *** PAGE 1/9: PROGRAM OVERVIEW ***
6307 PRINT CHR$(26)                          ' CLEAR SCREEN
6310 PRINT "******************************* INSTRUCTIONS *******************************"
6320 PRINT "WELCOME TO THE COMPACT-LEDGER ACCOUNTING PROGRAM."
6330 PRINT "THIS PROGRAM HELPS YOU TRACK AND MANAGE REVENUE AND EXPENSES."
6340 PRINT
6350 PRINT "MAIN FEATURES:"
6360 PRINT "1. DEFINE UP TO 99 UNIQUE CODES TO CLASSIFY REVENUES AND EXPENSES."
6370 PRINT "2. RECORD DETAILED LEDGER ENTRIES WITH AMOUNTS, DESCRIPTIONS, AND DATES."
6380 PRINT "3. GENERATE REPORTS TO VIEW TOTALS BY CATEGORY, CODE, OR DATE RANGE."
6390 PRINT "4. SAVE AND LOAD DATA TO/FROM A FILE FOR LONG-TERM STORAGE."
6400 PRINT "5. EXPORT LEDGER ENTRIES TO A CSV FILE FOR EXTERNAL ANALYSIS."
6410 PRINT
6420 PRINT "TO BEGIN: RETURN TO THE MAIN MENU, THEN SELECT A FEATURE BY ITS NUMBER."
6430 PRINT "***************************************************************************"
6440 RETURN
6580 REM *** PAGE 2/9: DEFINING CODES ***
6590 PRINT CHR$(26)                          ' CLEAR SCREEN
6600 PRINT "****************************** DEFINING CODES ******************************"
6610 PRINT "WHAT ARE CODES?"
6620 PRINT "CODES HELP CATEGORIZE REVENUE AND EXPENSE TYPES (E.G., E01 FOR RENT)."
6630 PRINT
6640 PRINT "HOW TO DEFINE A CODE:"
6650 PRINT "1. SELECT '1. ADD A NEW CODE' FROM THE MAIN MENU."
6660 PRINT "2. ENTER A CODE IN THE FORMAT:"
6670 PRINT "   * 'E' FOLLOWED BY TWO DIGITS FOR EXPENSES (E.G., E01, E99)."
6680 PRINT "   * 'R' FOLLOWED BY TWO DIGITS FOR REVENUES (E.G., R01, R99)."
6690 PRINT "3. ENTER A DESCRIPTION FOR THE CODE (E.G., 'OFFICE SUPPLIES')."
6740 PRINT
6750 PRINT "ERROR HANDLING:"
6760 PRINT "   * DUPLICATE CODES ARE NOT ALLOWED."
6770 PRINT "   * ENSURE THE CODE IS EXACTLY 3 CHARACTERS LONG."
6780 PRINT "***************************************************************************"
6790 RETURN
6791 REM *** PAGE 3/9: VIEWING AND DELETING CODES ***
6792 PRINT CHR$(26)                          ' CLEAR SCREEN
6793 PRINT "************************* VIEWING AND DELETING CODES ************************"
6800 PRINT "VIEW EXISTING CODES:"
6810 PRINT "1. SELECT '2. VIEW EXISTING CODES' FROM THE MAIN MENU."
6820 PRINT "2. USE 'N' AND 'P' TO NAVIGATE PAGES IF THERE ARE MANY CODES."
6830 PRINT "   EACH PAGE DISPLAYS UP TO 11 CODES."
6840 PRINT
6850 PRINT "DELETE A CODE:"
6860 PRINT "1. SELECT '3. DELETE A CODE' FROM THE MAIN MENU."
6870 PRINT "2. ENTER THE CODE TO DELETE."
6880 PRINT "3. YOU CANNOT DELETE A CODE THAT IS IN USE IN THE LEDGER."
6890 PRINT "   TO DELETE SUCH A CODE, FIRST DELETE ASSOCIATED LEDGER ENTRIES."
6900 PRINT
6910 PRINT "TROUBLESHOOTING:"
6920 PRINT "   * IF YOU GET 'CODE DOES NOT EXIST,' CHECK YOUR CODE LIST FIRST."
6930 PRINT "***************************************************************************"
6940 RETURN
6950 REM *** PAGE 4/9: ADDING LEDGER ENTRIES ***
6951 PRINT CHR$(26)                          ' CLEAR SCREEN
6952 PRINT "***************************** ADDING ENTRIES *******************************"
6953 PRINT "ADD A LEDGER ENTRY:"
6954 PRINT "1. SELECT '4. ADD A NEW LEDGER ENTRY' FROM THE MAIN MENU."
6955 PRINT "2. ENTER THE FOLLOWING DETAILS:"
6956 PRINT "   * CODE: MUST MATCH AN EXISTING CODE (E.G., E01 OR R01)."
6957 PRINT "   * AMOUNT: A POSITIVE VALUE (E.G., 100.00)."
6958 PRINT "   * DESCRIPTION: A SHORT DESCRIPTION (UP TO 20 CHARACTERS)."
6959 PRINT "   * DATE: USE YYYY-MM-DD FORMAT (E.G., 2025-01-19)."
6960 PRINT
6961 PRINT "EXAMPLES:"
6962 PRINT "   CODE: E01 | AMOUNT: 500.00 | DESC: OFFICE RENT | DATE: 2025-01-19"
6963 PRINT
6964 PRINT "TROUBLESHOOTING:"
6965 PRINT "   * INVALID CODES WILL PROMPT YOU TO VIEW VALID CODES."
6966 PRINT "   * INVALID DATES WILL DISPLAY AN ERROR. ENSURE THE DATE IS IN YYYY-MM-DD."
6967 PRINT "***************************************************************************"
6968 RETURN
6969 REM *** PAGE 5/9: VIEWING AND DELETING ENTRIES ***
6970 PRINT CHR$(26)                          ' CLEAR SCREEN
6971 PRINT "*********************** VIEWING AND DELETING ENTRIES ***********************"
6972 PRINT "VIEW ENTRIES:"
6973 PRINT "1. SELECT '6. VIEW LEDGER' FROM THE MAIN MENU."
6974 PRINT "2. ENTER A START AND END DATE TO FILTER ENTRIES."
6975 PRINT "3. USE 'N' AND 'P' TO NAVIGATE THROUGH THE ENTRIES."
6976 PRINT "4. EACH PAGE DISPLAYS UP TO 20 ENTRIES."
6977 PRINT
6978 PRINT "DELETE ENTRIES:"
6979 PRINT "1. SELECT '5. DELETE A LEDGER ENTRY' FROM THE MAIN MENU."
6980 PRINT "2. ENTER THE INDEX OF THE ENTRY TO DELETE (FOUND IN THE VIEW LEDGER SCREEN)."
6981 PRINT
6982 PRINT "TROUBLESHOOTING:"
6983 PRINT "   * IF YOU CANNOT FIND AN ENTRY, CHECK THE DATE RANGE USED FOR VIEWING."
6984 PRINT "***************************************************************************"
6985 RETURN
7000 REM *** PAGE 6/9: SAVING AND LOADING DATA ***
7010 PRINT CHR$(26)                          ' CLEAR SCREEN
7020 PRINT "************************** SAVING AND LOADING DATA *************************"
7030 PRINT "SAVE YOUR DATA:"
7040 PRINT "1. SELECT '7. SAVE LEDGER TO FILE' FROM THE MAIN MENU."
7050 PRINT "2. ENTER A FILENAME (E.G., 'JAN2025.DAT')."
7060 PRINT "3. SAVE REGULARLY TO PREVENT DATA LOSS."
7070 PRINT
7080 PRINT "LOAD DATA:"
7090 PRINT "1. SELECT '8. LOAD LEDGER FROM FILE' FROM THE MAIN MENU."
7100 PRINT "2. ENTER THE FILENAME OF A PREVIOUSLY SAVED FILE."
7110 PRINT
7120 PRINT "WARNING:"
7130 PRINT "   * LOADING DATA WILL ERASE ALL EXISTING DATA IN MEMORY."
7140 PRINT "   * ALWAYS SAVE YOUR CURRENT DATA BEFORE LOADING A NEW FILE."
7150 PRINT "***************************************************************************"
7160 RETURN
7161 REM *** PAGE 7/9: GENERATING REPORTS ***
7162 PRINT CHR$(26)                          ' CLEAR SCREEN
7163 PRINT "**************************** GENERATING REPORTS ***************************"
7164 PRINT "REPORT TYPES:"
7165 PRINT "1. REPORTS BY DATE RANGE: VIEW ALL ENTRIES BETWEEN TWO DATES."
7166 PRINT "2. MONTHLY TOTALS BY YEAR: SEE REVENUE/EXPENSE TOTALS FOR EACH MONTH."
7167 PRINT "3. REPORTS BY CODE: GET TOTALS FOR A SPECIFIC REVENUE/EXPENSE CODE."
7168 PRINT "4. REPORTS BY CATEGORY: SEE TOTALS FOR ALL REVENUES OR EXPENSES."
7169 PRINT
7170 PRINT "HOW TO GENERATE REPORTS:"
7180 PRINT "1. SELECT THE DESIRED REPORT TYPE FROM THE MAIN MENU."
7190 PRINT "2. ENTER THE REQUIRED DETAILS (E.G., DATE RANGE, YEAR, OR CODE)."
7200 PRINT "3. USE PAGINATION ('N' AND 'P') TO VIEW LONG REPORTS."
7210 PRINT
7220 PRINT "TROUBLESHOOTING:"
7230 PRINT "   * IF NO DATA IS FOUND, ENSURE YOU ENTERED THE CORRECT DATE RANGE OR CODE."
7240 PRINT "***************************************************************************"
7250 RETURN
7388 REM *** PAGE 8/9: EXPORTING TO CSV ***
7389 PRINT CHR$(26)                          ' CLEAR SCREEN
7300 PRINT "***************************** EXPORTING TO CSV ****************************"
7310 PRINT "EXPORT YOUR DATA:"
7320 PRINT "1. SELECT '13. EXPORT LEDGER TO CSV' FROM THE MAIN MENU."
7330 PRINT "2. ENTER A FILENAME (E.G., 'LEDGER2025.CSV')."
7340 PRINT "3. THE PROGRAM WILL EXPORT ALL LEDGER ENTRIES TO A CSV FILE."
7350 PRINT
7360 PRINT "USING CSV FILES:"
7370 PRINT "   * OPEN THE FILE IN SPREADSHEET SOFTWARE (E.G., EXCEL)."
7380 PRINT "   * THE CSV INCLUDES COLUMNS FOR ALL ENTRY DETAILS (E.G., INDEX, CODE, AMOUNT)."
7390 PRINT "***************************************************************************"
7400 RETURN
7498 REM *** PAGE 9/9: OTHER TIPS AND EXITING ***
7500 PRINT CHR$(26)                          ' CLEAR SCREEN
7510 PRINT "******************************** OTHER TIPS ********************************"
7520 PRINT "1. SAVE YOUR DATA REGULARLY TO AVOID LOSING YOUR WORK."
7530 PRINT "2. NAVIGATE USING THE MENU TO EXPLORE ALL FEATURES."
7540 PRINT "3. ALWAYS ENTER DATA CAREFULLY TO AVOID ERRORS."
7550 PRINT
7560 PRINT "EXITING THE PROGRAM:"
7570 PRINT "1. SELECT '15. EXIT' FROM THE MAIN MENU."
7580 PRINT "2. SAVE YOUR DATA WHEN PROMPTED TO AVOID LOSING CHANGES."
7590 PRINT "***************************************************************************"
7591 PRINT
7920 MESSAGE$ = "<<< END OF INSTRUCTIONS >>>"      ' DEFINE THE MESSAGE
7921 SPACES = INT((75 - LEN(MESSAGE$)) / 2)        ' CALCULATE LEADING SPACES
7922 PRINT SPACE$(SPACES); MESSAGE$                ' PRINT CENTERED MESSAGE
7600 RETURN
8000 REM *** SUBROUTINE TO EXPORT LEDGER DATA TO CSV ***
8010 PRINT CHR$(26) ' CLEAR SCREEN
8020 PRINT "******************************"
8030 PRINT "     EXPORT LEDGER TO CSV"
8040 PRINT "******************************"
8050 PRINT
8060 PRINT "ENTER FILENAME TO EXPORT TO: "
8070 INPUT FILENAME$
8080 OPEN "O", #2, FILENAME$
8090 PRINT #2, "INDEX,CODE,AMOUNT,DESCRIPTION,DATE,TYPE" ' WRITE HEADERS
8100 FOR I = 1 TO ENTRYCOUNT
8110 PRINT #2, I; ","; CODE$(I); ","; AMOUNT(I); ","; DESC$(I); ","; DATE$(I); ","; TYPE$(I)
8120 NEXT I
8130 CLOSE #2
8140 PRINT "DATA EXPORTED SUCCESSFULLY TO "; FILENAME$
8150 GOSUB 9000  ' RETURN TO MENU
8160 RETURN
9000 REM *** DISPLAY MENU SUBROUTINE ***
9005 PRINT CHR$(26) ' CLEAR SCREEN
9010 PRINT STRING$(79, "*")
9020 PRINT TAB((80 - LEN("WELCOME TO COMPACT-LEDGER")) \ 2); "WELCOME TO COMPACT-LEDGER"
9025 PRINT TAB((80 - LEN("<<< THE MODERN SOLUTION FOR SMALL BUSINESS ACCOUNTING >>>")) \ 2); "<<< THE MODERN SOLUTION FOR SMALL BUSINESS ACCOUNTING >>>"
9035 PRINT STRING$(79, "*")
9045 PRINT TAB(14);"1.  ADD A NEW CODE"; TAB(47); "9.  REPORT BY CATEGORY"
9050 PRINT TAB(14);"2.  VIEW EXISTING CODES"; TAB(47); "10. REPORT BY CODE"
9055 PRINT TAB(14);"3.  DELETE A CODE"; TAB(47); "11. DETAILED REPORT"
9065 PRINT STRING$(79, "-")
9075 PRINT TAB(14);"4.  ADD A NEW LEDGER ENTRY"; TAB(47); "12. PRINT LEDGER"
9080 PRINT TAB(14);"5.  DELETE A LEDGER ENTRY"; TAB(47); "13. EXPORT LEDGER TO CSV"
9085 PRINT TAB(14);"6.  VIEW LEDGER"; TAB(47); "14. INSTRUCTIONS"
9095 PRINT STRING$(79, "-")
9105 PRINT TAB(14);"7.  SAVE LEDGER TO FILE"; TAB(47); "15. EXIT"
9110 PRINT TAB(14);"8.  LOAD LEDGER FROM FILE"
9120 PRINT STRING$(79, "*")
9215 PRINT
9130 INPUT "---> ENTER YOUR CHOICE (1-15): ", CHOICE
9140 IF CHOICE < 1 OR CHOICE > 15 THEN PRINT "INVALID CHOICE. PLEASE ENTER A NUMBER BETWEEN 1 AND 15.": GOTO 9130
9150 ON CHOICE GOTO 1000, 1200, 1300, 1500, 1700, 1900, 2000, 2200, 3105, 2963, 2500, 5000, 8000, 6000, 9200
9160 RETURN
9200 REM *** EXIT SEQUENCE WITH SAVE REMINDER ***
9205 PRINT CHR$(26)  ' CLEAR SCREEN
9210 PRINT STRING$(79, "*")
9216 PRINT
9220 PRINT TAB((80 - LEN("EXITING COMPACT-LEDGER")) \ 2); "EXITING COMPACT-LEDGER"
9225 PRINT
9230 PRINT TAB((80 - LEN("HAVE YOU SAVED YOUR DATA?")) \ 2); "HAVE YOU SAVED YOUR DATA?"
9235 PRINT
9240 PRINT TAB((80 - LEN("Y - YES")) \ 2); "Y - YES"
9245 PRINT TAB((80 - LEN("N - NO")) \ 2); "N - NO"
9250 PRINT
9255 PRINT STRING$(79, "*")
9256 PRINT
9260 INPUT "ENTER YOUR CHOICE (Y/N): ", SAVECHOICE$
9265 IF SAVECHOICE$ = "N" OR SAVECHOICE$ = "N" THEN GOSUB 9000 ' RETURN TO MAIN MENU IF DATA IS NOT SAVED
9270 IF SAVECHOICE$ <> "Y" AND SAVECHOICE$ <> "Y" THEN PRINT "INVALID CHOICE. PLEASE ENTER 'Y' OR 'N'.": GOTO 9260
9275 PRINT CHR$(26)  ' CLEAR SCREEN
9280 PRINT STRING$(79, "*")
9285 PRINT
9290 PRINT TAB((80 - LEN("EXITING COMPACT-LEDGER")) \ 2); "EXITING COMPACT-LEDGER"
9295 PRINT
9300 PRINT TAB((80 - LEN("GOODBYE!")) \ 2); "GOODBYE!"
9305 PRINT
9310 PRINT STRING$(79, "*")
9315 END
9500 REM *** ERROR HANDLING SUBROUTINE ***
9510 PRINT "AN ERROR OCCURRED. ERROR CODE: "; ERR; " AT LINE: "; ERL
9520 IF ERR = 53 THEN PRINT "ERROR: FILE NOT FOUND. PLEASE CHECK THE FILENAME AND TRY AGAIN.": GOTO 9600
9530 IF ERR = 61 THEN PRINT "ERROR: DISK FULL. PLEASE FREE UP SOME SPACE AND TRY AGAIN.": GOTO 9600
9540 IF ERR = 100 THEN PRINT "ERROR: INVALID INPUT. PLEASE FOLLOW THE INSTRUCTIONS AND TRY AGAIN.": GOTO 9600
9550 PRINT "ERROR: AN UNKNOWN ERROR OCCURRED. RETURNING TO MAIN MENU."
9560 GOSUB 9000  ' RETURN TO MENU
9600 RETURN  ' SAFELY EXIT THE ERROR HANDLING SUBROUTINE
10000 REM *** SPLASH SCREEN SUBROUTINE ***
10010 PRINT CHR$(26) ' CLEAR SCREEN
10020 PRINT "************************************************"
10040 PRINT "*           WELCOME TO COMPACT-LEDGER          *"
10060 PRINT "************************************************"
10070 PRINT
10080 PRINT "   A RECREATION INSPIRED BY THE ORIGINAL AD FOR"
10090 PRINT "                  MINI-LEDGER"
10100 PRINT
10110 PRINT "        SAY GOODBYE TO THE 'SHOE-BOX' SYSTEM!"
10120 PRINT "   ORGANIZE YOUR FINANCES WITH EASE AND PRECISION."
10130 PRINT
10140 PRINT "************************************************"
10150 PRINT "*        DEVELOPED IN THE SPIRIT OF CLASSIC    *"
10160 PRINT "*         SOFTWARE BY MODERN PROGRAMMERS       *"
10170 PRINT "************************************************"
10180 PRINT
10190 PRINT "   DEFINE UP TO 99 UNIQUE CODES FOR YOUR BUSINESS NEEDS"
10200 PRINT "   TRACK REVENUE, EXPENSES, AND GENERATE REPORTS"
10210 PRINT "   THIS IS NOT THE ORIGINAL MINI-LEDGER PROGRAM"
10220 PRINT
10230 PRINT "************************************************"
10240 PRINT
10250 PRINT "            PRESS ENTER TO CONTINUE"
10260 PRINT CHR$(7); ' RING BELL
10270 INPUT ""; DUMMY$
10280 RETURN
